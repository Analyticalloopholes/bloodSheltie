//
//  DefaultCommandDecoderTests.m.m
//  blood-sheltie
//
//  Created by Alexandre Normand on 1/21/2014.
//  Copyright (c) 2014 glukit. All rights reserved.
//

#import <XCTest/XCTest.h>
#import "DefaultDecoder.h"
#import "EncodingUtils.h"
#import "PageRange.h"
#import "RecordData.h"
#import "ReadDatabasePageRangeRequest.h"
#import "ReadDatabasePagesRequest.h"

@interface DefaultCommandDecoderTests_m : XCTestCase
@property(readonly) DefaultDecoder *decoder;
@end

@implementation DefaultCommandDecoderTests_m

- (void)setUp
{
    [super setUp];
    _decoder = [[DefaultDecoder alloc] init];
}

- (void)tearDown
{
    [super tearDown];
}

- (void)testDatabasePageRangeResponseDecoding
{
    NSString *input = @"01 0E 00 01 01 00 00 00 02 00 00 00 97 11";
    NSData *data = [EncodingUtils dataFromHexString:input];

    ReceiverResponse *response = [_decoder decodeResponse:data toRequest:[[ReadDatabasePageRangeRequest alloc] initWithRecordType:UserEventData]];
    XCTAssertNotNil(response, @"response should not be nil for input [%s]", [input UTF8String]);
    XCTAssertNotNil(response.payload, @"response.payload should not be nil for input [%s]", [input UTF8String]);
    PageRange *pageRange = (PageRange *) response.payload;
    XCTAssertEqual(pageRange.firstPage, 1u);
    XCTAssertEqual(pageRange.lastPage, 2u);
}

-(void)testDatabasePageOfGlucoseDataDecoding
{
    NSString *input = @"01 46 08 01 76 D9 00 00 26 00 00 00 04 02 B9 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 9F 39 C3 71 D6 08 79 0F D6 08 2F 00 14 CE 1F EF 72 D6 08 A5 10 D6 08 33 00 14 32 0D 1B 74 D6 08 D1 11 D6 08 38 00 14 04 ED 47 75 D6 08 FD 12 D6 08 3C 00 14 DD 4E 73 76 D6 08 29 14 D6 08 45 00 13 25 6A 9F 77 D6 08 55 15 D6 08 4D 00 13 A7 AB CB 78 D6 08 81 16 D6 08 54 00 13 03 2E F6 79 D6 08 AC 17 D6 08 57 00 13 8D 0D 22 7B D6 08 D8 18 D6 08 59 00 14 40 F1 4E 7C D6 08 04 1A D6 08 5A 00 14 C9 31 7A 7D D6 08 30 1B D6 08 5A 00 14 67 2D A6 7E D6 08 5C 1C D6 08 5A 00 14 13 DE D2 7F D6 08 88 1D D6 08 5B 00 14 BB A9 FE 80 D6 08 B4 1E D6 08 5C 00 14 9A DD 2A 82 D6 08 E0 1F D6 08 5C 00 14 E4 A4 56 83 D6 08 0C 21 D6 08 5A 00 94 75 45 82 84 D6 08 38 22 D6 08 5A 00 94 21 C6 83 84 D6 08 39 22 D6 08 5B 80 14 29 1B AE 85 D6 08 64 23 D6 08 59 00 14 53 C5 DA 86 D6 08 90 24 D6 08 58 00 14 66 8F 06 88 D6 08 BC 25 D6 08 55 00 14 75 E6 32 89 D6 08 E8 26 D6 08 55 00 24 D2 F4 5E 8A D6 08 14 28 D6 08 4E 00 24 B9 16 8A 8B D6 08 40 29 D6 08 47 00 25 B8 50 B6 8C D6 08 6C 2A D6 08 41 00 25 11 00 E2 8D D6 08 98 2B D6 08 3E 00 25 3C 70 0E 8F D6 08 C4 2C D6 08 3E 00 24 E6 5A 3A 90 D6 08 F0 2D D6 08 3E 00 24 2A EB 66 91 D6 08 1C 2F D6 08 3E 00 24 86 A7 92 92 D6 08 48 30 D6 08 3F 00 24 D0 B6 BE 93 D6 08 74 31 D6 08 51 00 A4 82 DF EA 94 D6 08 A0 32 D6 08 50 00 B8 12 29 EA 94 D6 08 A0 32 D6 08 5D 80 38 53 E1 16 96 D6 08 CC 33 D6 08 5C 00 38 51 76 42 97 D6 08 F8 34 D6 08 61 00 38 45 8E 6E 98 D6 08 24 36 D6 08 6B 00 38 C3 DE 9A 99 D6 08 50 37 D6 08 79 00 23 A7 5C C6 9A D6 08 7C 38 D6 08 85 00 38 BE C3 FF FF FF FF FF FF 9C D9 00 00 26 00 00 00 04 02 BA 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 D2 E3 F2 9B D6 08 A8 39 D6 08 8A 00 38 C2 EB 1E 9D D6 08 D4 3A D6 08 76 00 B8 E0 13 4A 9E D6 08 00 3C D6 08 74 00 B8 A9 81 4A 9E D6 08 00 3C D6 08 75 80 38 89 3C 76 9F D6 08 2C 3D D6 08 77 00 38 87 53 A2 A0 D6 08 58 3E D6 08 7D 00 38 2E 2D CE A1 D6 08 84 3F D6 08 81 00 38 9B 9F FA A2 D6 08 B0 40 D6 08 81 00 38 80 98 26 A4 D6 08 DC 41 D6 08 7E 00 38 06 EB 52 A5 D6 08 08 43 D6 08 79 00 38 EE E0 7E A6 D6 08 34 44 D6 08 75 00 24 E9 6D AA A7 D6 08 60 45 D6 08 72 00 24 C8 20 D6 A8 D6 08 8C 46 D6 08 70 00 24 2A D4 02 AA D6 08 B8 47 D6 08 6B 00 14 8F 9B 2E AB D6 08 E4 48 D6 08 69 00 14 E6 BE 5A AC D6 08 10 4A D6 08 66 00 14 E6 01 86 AD D6 08 3C 4B D6 08 63 00 14 E5 97 B2 AE D6 08 68 4C D6 08 61 00 14 5A 05 DE AF D6 08 94 4D D6 08 5F 00 14 8E 91 0A B1 D6 08 C0 4E D6 08 5D 00 14 38 7E 36 B2 D6 08 EC 4F D6 08 5C 00 14 74 8D 62 B3 D6 08 18 51 D6 08 59 00 14 17 3D 8E B4 D6 08 44 52 D6 08 58 00 14 0D F4 BA B5 D6 08 70 53 D6 08 56 00 14 A2 F3 E6 B6 D6 08 9C 54 D6 08 54 00 14 E5 4C 12 B8 D6 08 C8 55 D6 08 51 00 14 6F 93 3E B9 D6 08 F4 56 D6 08 4E 00 14 CD 0F 6A BA D6 08 20 58 D6 08 4D 00 14 F6 A7 96 BB D6 08 4C 59 D6 08 4C 00 14 A3 9A C2 BC D6 08 78 5A D6 08 4A 00 14 FD 22 EE BD D6 08 A4 5B D6 08 49 00 14 FE 1B 1A BF D6 08 D0 5C D6 08 47 00 14 EC 30 46 C0 D6 08 FC 5D D6 08 47 00 14 C0 22 72 C1 D6 08 28 5F D6 08 46 00 14 5D DF 9E C2 D6 08 54 60 D6 08 45 00 14 8B 9F CA C3 D6 08 80 61 D6 08 44 00 14 59 42 F6 C4 D6 08 AC 62 D6 08 43 00 14 C0 25 22 C6 D6 08 D8 63 D6 08 43 00 14 48 32 FF FF FF FF FF FF C2 D9 00 00 26 00 00 00 04 02 BB 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 6D 4B 4E C7 D6 08 04 65 D6 08 42 00 14 BF E9 7A C8 D6 08 30 66 D6 08 40 00 14 C5 29 A6 C9 D6 08 5C 67 D6 08 40 00 14 DA 89 D2 CA D6 08 88 68 D6 08 3F 00 14 52 63 FE CB D6 08 B4 69 D6 08 3E 00 14 D2 2C 2A CD D6 08 E0 6A D6 08 3C 00 14 B9 1D 56 CE D6 08 0C 6C D6 08 3C 00 14 44 23 82 CF D6 08 38 6D D6 08 3C 00 14 EF 58 AE D0 D6 08 64 6E D6 08 3C 00 14 67 B5 DA D1 D6 08 90 6F D6 08 3C 00 14 09 9B 06 D3 D6 08 BC 70 D6 08 37 00 14 E3 3D 32 D4 D6 08 E8 71 D6 08 37 00 14 E8 E1 5E D5 D6 08 14 73 D6 08 35 00 14 18 0B 8A D6 D6 08 40 74 D6 08 39 00 14 A3 E5 B6 D7 D6 08 6C 75 D6 08 3B 00 14 35 91 E2 D8 D6 08 98 76 D6 08 3B 00 14 95 A7 0E DA D6 08 C4 77 D6 08 39 00 24 BC 48 3A DB D6 08 F0 78 D6 08 39 00 24 B1 D4 66 DC D6 08 1C 7A D6 08 3A 00 24 F2 B2 92 DD D6 08 48 7B D6 08 3B 00 24 09 E7 BE DE D6 08 74 7C D6 08 3E 00 24 22 27 EA DF D6 08 A0 7D D6 08 3E 00 24 C0 CD 16 E1 D6 08 CC 7E D6 08 3D 00 24 9F EE 42 E2 D6 08 F8 7F D6 08 3C 00 14 77 C3 6E E3 D6 08 24 81 D6 08 40 00 14 F2 5A 9A E4 D6 08 50 82 D6 08 43 00 14 60 F7 C6 E5 D6 08 7C 83 D6 08 43 00 14 39 03 F2 E6 D6 08 A8 84 D6 08 42 00 14 2F 63 1E E8 D6 08 D4 85 D6 08 40 00 14 DD 33 4A E9 D6 08 00 87 D6 08 3F 00 14 E6 E3 76 EA D6 08 2C 88 D6 08 3E 00 14 09 90 A2 EB D6 08 58 89 D6 08 3D 00 14 1E 6F CD EC D6 08 84 8A D6 08 3C 00 14 AD FC FA ED D6 08 B0 8B D6 08 3B 00 14 69 1D 25 EF D6 08 DB 8C D6 08 3A 00 14 D6 D7 51 F0 D6 08 07 8E D6 08 3B 00 14 51 50 7D F1 D6 08 33 8F D6 08 3D 00 14 EC 09 A9 F2 D6 08 5F 90 D6 08 41 00 14 B9 E2 FF FF FF FF FF FF E8 D9 00 00 26 00 00 00 04 02 BC 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 08 96 D5 F3 D6 08 8B 91 D6 08 42 00 14 FF 59 01 F5 D6 08 B7 92 D6 08 42 00 14 43 26 2D F6 D6 08 E3 93 D6 08 42 00 14 CE A0 59 F7 D6 08 0F 95 D6 08 44 00 14 97 50 85 F8 D6 08 3B 96 D6 08 46 00 14 66 55 B1 F9 D6 08 67 97 D6 08 47 00 14 4F 5E DE FA D6 08 94 98 D6 08 48 00 14 34 94 09 FC D6 08 BF 99 D6 08 48 00 14 0D 36 35 FD D6 08 EB 9A D6 08 47 00 14 46 9C 61 FE D6 08 17 9C D6 08 47 00 14 34 9D 8D FF D6 08 43 9D D6 08 48 00 14 7D 24 B9 00 D7 08 6F 9E D6 08 47 00 14 16 D2 E5 01 D7 08 9B 9F D6 08 47 00 14 8C F4 12 03 D7 08 C8 A0 D6 08 47 00 14 19 E9 3D 04 D7 08 F3 A1 D6 08 48 00 14 99 AF 69 05 D7 08 1F A3 D6 08 48 00 14 BB 41 95 06 D7 08 4B A4 D6 08 47 00 14 A4 FE C1 07 D7 08 77 A5 D6 08 46 00 14 38 A8 ED 08 D7 08 A3 A6 D6 08 46 00 14 72 E9 19 0A D7 08 CF A7 D6 08 45 00 14 06 A9 45 0B D7 08 FB A8 D6 08 44 00 14 1A 4E 71 0C D7 08 27 AA D6 08 44 00 14 A5 64 9D 0D D7 08 53 AB D6 08 45 00 14 1B A8 C9 0E D7 08 7F AC D6 08 45 00 14 A7 AD F5 0F D7 08 AB AD D6 08 44 00 14 54 3C 21 11 D7 08 D7 AE D6 08 43 00 14 49 C5 4D 12 D7 08 03 B0 D6 08 43 00 14 6F 73 79 13 D7 08 2F B1 D6 08 3F 00 94 F6 F7 79 13 D7 08 2F B1 D6 08 40 80 14 DF 89 A5 14 D7 08 5B B2 D6 08 3E 00 14 78 AD D1 15 D7 08 87 B3 D6 08 3C 00 14 2D 10 FD 16 D7 08 B3 B4 D6 08 3B 00 14 CB 2D 2B 18 D7 08 E1 B5 D6 08 05 00 58 B1 E5 55 19 D7 08 0B B7 D6 08 05 00 58 F1 02 81 1A D7 08 37 B8 D6 08 05 00 58 DE B4 AD 1B D7 08 63 B9 D6 08 05 00 58 D9 EC D9 1C D7 08 8F BA D6 08 05 00 58 9E 9E 05 1E D7 08 BB BB D6 08 05 00 58 74 F6 FF FF FF FF FF FF 16 8F";
    NSData *data = [EncodingUtils dataFromHexString:input];

    ReceiverResponse *response = [_decoder decodeResponse:data toRequest:[[ReadDatabasePagesRequest alloc] initWithRecordType:EGVData pageNumber:1 numberOfPages:2]];
    XCTAssertNotNil(response, @"response should not be nil for input [%s]", [input UTF8String]);
    XCTAssertNotNil(response.payload, @"response.payload should not be nil for input [%s]", [input UTF8String]);
    RecordData *recordData = (RecordData *) response.payload;
    XCTAssertEqual(recordData.recordType, EGVData);
    XCTAssertEqual([recordData.records count], 152ul);
}

-(void)testDatabasePageOfGlucoseDataDecodingExample2
{
    NSString *input = @"01:46:08:01:56:57:01:00:26:00:00:00:04:02:09:09:00:00:00:00:00:00:00:00:00:00:00:00:00:00:EB:4F:BB:C8:67:09:38:58:67:09:41:00:14:DA:22:E7:C9:67:09:64:59:67:09:41:00:14:E2:52:13:CB:67:09:90:5A:67:09:41:00:14:A9:CF:40:CC:67:09:BD:5B:67:09:40:00:14:2D:4C:6B:CD:67:09:E8:5C:67:09:40:00:14:17:08:98:CE:67:09:15:5E:67:09:42:00:14:A8:D3:C3:CF:67:09:40:5F:67:09:42:00:14:E1:A1:EF:D0:67:09:6C:60:67:09:43:00:14:57:DB:1B:D2:67:09:98:61:67:09:43:00:14:5C:CD:47:D3:67:09:C4:62:67:09:43:00:14:24:36:73:D4:67:09:F0:63:67:09:42:00:14:05:6E:9F:D5:67:09:1C:65:67:09:42:00:14:E5:52:CC:D6:67:09:49:66:67:09:43:00:14:D8:E0:F7:D7:67:09:74:67:67:09:43:00:14:89:5C:23:D9:67:09:A0:68:67:09:44:00:14:43:6C:4F:DA:67:09:CC:69:67:09:44:00:14:3B:64:7B:DB:67:09:F8:6A:67:09:44:00:14:D5:F3:A7:DC:67:09:24:6C:67:09:43:00:14:D0:9F:D3:DD:67:09:50:6D:67:09:44:00:14:D7:9F:FF:DE:67:09:7C:6E:67:09:45:00:14:E6:B2:2B:E0:67:09:A8:6F:67:09:46:00:14:D4:73:57:E1:67:09:D4:70:67:09:45:00:14:17:04:83:E2:67:09:00:72:67:09:46:00:14:65:2E:AF:E3:67:09:2C:73:67:09:46:00:14:AE:61:DB:E4:67:09:58:74:67:09:47:00:14:57:2D:07:E6:67:09:84:75:67:09:48:00:14:C2:E2:33:E7:67:09:B0:76:67:09:49:00:14:1C:42:5F:E8:67:09:DC:77:67:09:4A:00:14:4A:F4:8B:E9:67:09:08:79:67:09:4A:00:14:01:52:B7:EA:67:09:34:7A:67:09:4C:00:14:E6:98:E3:EB:67:09:60:7B:67:09:4D:00:14:CD:EE:0F:ED:67:09:8C:7C:67:09:4E:00:14:27:D2:3B:EE:67:09:B8:7D:67:09:53:00:14:31:11:67:EF:67:09:E4:7E:67:09:52:00:14:79:DD:93:F0:67:09:10:80:67:09:52:00:14:60:83:BF:F1:67:09:3C:81:67:09:54:00:14:0B:7E:EB:F2:67:09:68:82:67:09:56:00:14:BA:04:17:F4:67:09:94:83:67:09:5A:00:14:C6:FB:FF:FF:FF:FF:FF:FF:7C:57:01:00:26:00:00:00:04:02:0A:09:00:00:00:00:00:00:00:00:00:00:00:00:00:00:5C:12:43:F5:67:09:C0:84:67:09:5D:00:14:AC:B2:6F:F6:67:09:EC:85:67:09:5D:00:14:ED:23:9B:F7:67:09:18:87:67:09:5E:00:14:99:13:C7:F8:67:09:44:88:67:09:60:00:14:52:04:F3:F9:67:09:70:89:67:09:61:00:14:CC:2F:1F:FB:67:09:9C:8A:67:09:61:00:14:E2:E1:4B:FC:67:09:C8:8B:67:09:61:00:14:46:D3:77:FD:67:09:F4:8C:67:09:62:00:14:7A:2A:A3:FE:67:09:20:8E:67:09:62:00:14:58:59:CF:FF:67:09:4C:8F:67:09:62:00:14:AA:8F:FB:00:68:09:78:90:67:09:63:00:14:06:A4:27:02:68:09:A4:91:67:09:65:00:14:02:F5:53:03:68:09:D0:92:67:09:66:00:14:85:A2:7F:04:68:09:FC:93:67:09:67:00:14:C1:A9:AB:05:68:09:28:95:67:09:69:00:14:C9:19:D7:06:68:09:54:96:67:09:6A:00:14:E7:A1:03:08:68:09:80:97:67:09:6A:00:14:1E:94:2F:09:68:09:AC:98:67:09:69:00:14:26:02:5B:0A:68:09:D8:99:67:09:6A:00:14:6B:00:87:0B:68:09:04:9B:67:09:6B:00:14:D0:AB:B3:0C:68:09:30:9C:67:09:6D:00:14:80:FB:DF:0D:68:09:5C:9D:67:09:6E:00:14:22:74:0B:0F:68:09:88:9E:67:09:6F:00:14:D5:1A:37:10:68:09:B4:9F:67:09:70:00:14:68:F5:63:11:68:09:E0:A0:67:09:72:00:14:3C:75:8F:12:68:09:0C:A2:67:09:73:00:14:C7:A6:BB:13:68:09:38:A3:67:09:74:00:14:F9:3F:E7:14:68:09:64:A4:67:09:75:00:14:AF:86:13:16:68:09:90:A5:67:09:75:00:14:A4:90:3F:17:68:09:BC:A6:67:09:76:00:14:7F:0D:6B:18:68:09:E8:A7:67:09:78:00:14:91:6E:97:19:68:09:14:A9:67:09:79:00:14:45:0A:C3:1A:68:09:40:AA:67:09:7A:00:14:C4:47:EF:1B:68:09:6C:AB:67:09:7A:00:14:0F:08:1B:1D:68:09:98:AC:67:09:78:00:14:B0:50:47:1E:68:09:C4";
    NSData *data = [EncodingUtils dataFromHexString:input];

    ReceiverResponse *response = [_decoder decodeResponse:data toRequest:[[ReadDatabasePagesRequest alloc] initWithRecordType:EGVData pageNumber:1 numberOfPages:2]];
    XCTAssertNotNil(response, @"response should not be nil for input [%s]", [input UTF8String]);
    XCTAssertNotNil(response.payload, @"response.payload should not be nil for input [%s]", [input UTF8String]);
    RecordData *recordData = (RecordData *) response.payload;
    XCTAssertEqual(recordData.recordType, EGVData);
    XCTAssertEqual([recordData.records count], 152ul);
}

-(void)testDatabasePageOfUserEventDecoding
{
    NSString *input = @"01 26 04 01 6D 0B 00 00 19 00 00 00 0B 01 75 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 CB 20 DB B8 D4 08 91 56 D4 08 02 00 54 56 D4 08 5E 01 00 00 E9 9D 0D BA D4 08 C3 57 D4 08 01 00 BC 57 D4 08 0A 00 00 00 E8 E3 FA 06 D5 08 B0 A4 D4 08 02 00 9C A4 D4 08 5E 01 00 00 40 E5 AF 13 D5 08 65 B1 D4 08 01 00 44 B1 D4 08 0D 00 00 00 AE C5 67 3B D5 08 1D D9 D4 08 01 00 E0 D8 D4 08 04 00 00 00 78 96 BD 50 D5 08 73 EE D4 08 02 00 70 EE D4 08 F4 01 00 00 9C 0D 2D BE D5 08 E3 5B D5 08 02 00 A8 5B D5 08 58 02 00 00 38 0F 37 BE D5 08 ED 5B D5 08 02 00 E4 5B D5 08 2C 01 00 00 54 2A 41 CA D5 08 F7 67 D5 08 01 00 CC 64 D5 08 01 00 00 00 14 1F D9 DD D5 08 8F 7B D5 08 02 00 88 7B D5 08 FA 00 00 00 29 60 5C 05 D6 08 12 A3 D5 08 02 00 E8 A2 D5 08 2C 01 00 00 F8 2F D9 05 D6 08 8F A3 D5 08 01 00 60 A3 D5 08 02 00 00 00 86 7C 52 08 D6 08 08 A6 D5 08 01 00 F4 A5 D5 08 0A 00 00 00 F6 32 CB 22 D6 08 81 C0 D5 08 01 00 70 C0 D5 08 02 00 00 00 AB 3E AA 2C D6 08 60 CA D5 08 01 00 48 CA D5 08 02 00 00 00 3D 95 EA 2E D6 08 A0 CC D5 08 01 00 64 CC D5 08 02 00 00 00 36 77 BE 35 D6 08 74 D3 D5 08 01 00 6C D3 D5 08 02 00 00 00 FB 15 1B 53 D6 08 D1 F0 D5 08 02 00 B8 F0 D5 08 2C 01 00 00 48 13 90 59 D6 08 46 F7 D5 08 01 00 0C F7 D5 08 0A 00 00 00 45 B3 E1 6C D6 08 97 0A D6 08 01 00 80 0A D6 08 04 00 00 00 4C D0 A1 93 D6 08 57 31 D6 08 02 00 2C 31 D6 08 64 00 00 00 61 9A DE 93 D6 08 94 31 D6 08 02 00 68 31 D6 08 F4 01 00 00 14 9E DE 9C D6 08 94 3A D6 08 02 00 8C 3A D6 08 64 00 00 00 81 6A BB 12 D7 08 71 B0 D6 08 02 00 70 B0 D6 08 2C 01 00 00 33 52 10 13 D7 08 C6 B0 D6 08 02 00 AC B0 D6 08 58 02 00 00 CA 2B 86 0B 00 00 0A 00 00 00 0B 01 76 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 C9 5D E3 1B D7 08 99 B9 D6 08 01 00 94 B9 D6 08 01 00 00 00 3D A5 3A 2A D7 08 F0 C7 D6 08 01 00 E0 C7 D6 08 02 00 00 00 EE 29 2C 2B D7 08 E2 C8 D6 08 01 00 D0 C8 D6 08 02 00 00 00 45 F6 A6 5F D7 08 5C FD D6 08 02 00 50 FD D6 08 5E 01 00 00 FC FF AC 62 D7 08 62 00 D7 08 01 00 5C 00 D7 08 0A 00 00 00 60 87 1C 8E D7 08 D2 2B D7 08 01 00 B8 2B D7 08 02 00 00 00 56 2D 0F 8F D7 08 C5 2C D7 08 01 00 A8 2C D7 08 01 00 00 00 EC 0C 6A B8 D7 08 20 56 D7 08 02 00 E8 55 D7 08 5E 01 00 00 9A AB A6 BB D7 08 5C 59 D7 08 01 00 30 59 D7 08 0D 00 00 00 A3 32 35 C2 D7 08 EB 5F D7 08 02 00 C0 5F D7 08 96 00 00 00 08 9C FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 24 5F";
    NSData *data = [EncodingUtils dataFromHexString:input];

    ReceiverResponse *response = [_decoder decodeResponse:data toRequest:[[ReadDatabasePagesRequest alloc] initWithRecordType:UserEventData pageNumber:1 numberOfPages:2]];
    XCTAssertNotNil(response, @"response should not be nil for input [%s]", [input UTF8String]);
    XCTAssertNotNil(response.payload, @"response.payload should not be nil for input [%s]", [input UTF8String]);
    RecordData *recordData = (RecordData *) response.payload;
    XCTAssertEqual(recordData.recordType, UserEventData);
    XCTAssertEqual([recordData.records count], 35ul);
}

@end
